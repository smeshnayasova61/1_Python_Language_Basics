#4. Программа принимает действительное положительное число x и целое отрицательное число y. Выполните возведение числа x в степень y.
# Задание реализуйте в виде функции my_func(x, y). При решении задания нужно обойтись без встроенной функции возведения числа в степень.
#Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла
def my_func(x, y):
    try:
        res = x ** y
    except TypeError:
        return 'Введите дробное число и отрицательную степень'
    return res
print(my_func(4.5, -2))

print('*'*100)

def my_func1(x, y):
    try:
        x, y = float(x), int(y)
        if x<=0 or y>=0:
            return 'Не выполнено условие ввода данных:\nx должен быть больше 0\ny должен быть меньше 0'
        else:
            result = 1 #result - это переменная
            for _ in range(abs(y)): # в цикле for _-это безымянная переменная, изначально =1
                result /= x #Делит левый операнд на правый и присваивает результат левому операнду, 1 деленное на х
            return f'Результат возведения x в степень y: {round(result, 6)}'#вернули результат, округленный до 6 знаков после зпт
    except ValueError:
        return "программа работает только с числами."
number1 = input('введите действительное положительное число, х = ')
number2 = input('введите целое отрицательное число, у = ')
print(my_func1(number1, number2))

print('*'*100)

def i_involve_r(x, y): #i_involve_r(x, y)-объявление рекурсии(это когда функция вызывает сама себя)
    return 1 if y == 0 else i_involve_r(x, y+1)*1/x # i_involve_r(x, y+1)*1/x-вызов рекурсии
a = 2 #должно быть дейсвительное положительное число х
b = -4 #должно быть: целое отрицательное число у
print(f'Solved via recursion {a} raised to power {b} = {i_involve_r(a, b)}')